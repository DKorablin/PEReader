using System;
using System.Reflection;

namespace AlphaOmega.Debug.CorDirectory.Meta.Tables
{
	/// <summary>
	/// Properties within metadata are best viewed as a means
	/// to gather together collections of methods defined on a class, give them a name, and not much else.
	/// The methods are typically get_ and set_ methods, already defined on the class,
	/// and inserted like any other methods into the MethodDef table.
	/// </summary>
	public class PropertyRow : BaseMetaRow
	{
		/// <summary>Flags that can be associated with a property.</summary>
		public PropertyAttributes Flags { get { return (PropertyAttributes)base.GetValue<UInt16>(0); } }
<<<<<<< HEAD

		/// <summary>Property name</summary>
		public String Name { get { return base.GetValue<String>(1); } }

=======
		/// <summary>Property name</summary>
		public String Name { get { return base.GetValue<String>(1); } }
>>>>>>> a19aeac02d80c25d8fd68cb439b59fc58b285e90
		/// <summary>Signature</summary>
		/// <remarks>
		/// The name of this column is misleading.
		/// It does not index a TypeDef or TypeRef table — instead it indexes the signature in the Blob heap of the Property.
		/// </remarks>
		public Byte[] Type { get { return base.GetValue<Byte[]>(2); } }
<<<<<<< HEAD

		/// <summary>First byte of signature</summary>
		public CorSignature PropertySig { get { return (CorSignature)this.Type[0]; } }

		/// <summary>Count of input parameters for this property</summary>
		[Obsolete("It's compressed UInt32", true)]
		public Byte ParamCount { get { return this.Type[1]; } }

		/// <summary>Property type</summary>
		public Cor.ELEMENT_TYPE ReturnType { get { return (Cor.ELEMENT_TYPE)this.Type[2]; } }

=======
		/// <summary>First byte of signature</summary>
		public CorSignature PropertySig { get { return (CorSignature)this.Type[0]; } }
		/// <summary>Count of input parameters for this property</summary>
		[Obsolete("It's compressed UInt32", true)]
		public Byte ParamCount { get { return this.Type[1]; } }
		/// <summary>Property type</summary>
		public Cor.ELEMENT_TYPE ReturnType { get { return (Cor.ELEMENT_TYPE)this.Type[2]; } }
>>>>>>> a19aeac02d80c25d8fd68cb439b59fc58b285e90
		/// <summary>Name</summary>
		/// <returns>String</returns>
		public override String ToString()
		{
			return base.ToString(this.Name);
		}
	}
}