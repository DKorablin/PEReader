name: Test, Buid, Release

on:
  push:
    branches: [ "master" ]

env:
  SolutionName: ${{github.event.repository.name}}

jobs:
  test_net_windows:
    name: Testing .NET (Windows)
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore ${{env.SolutionName}}.sln
    - name: Test .NET Standard v2.0
      run: dotnet test ${{env.SolutionName}}.sln --no-build --verbosity normal

  test_net_ubuntu:
    name: Testing .NET (Ubuntu)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore ${{env.SolutionName}}.sln
    - name: Test .NET Standard v2.0
      run: dotnet test ${{env.SolutionName}}.sln --no-build --verbosity normal

  version:
    name: Incrementing version number
    needs: [test_net_windows,test_net_ubuntu]
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{steps.tag_version.outputs.new_version}}
      new_tag: ${{steps.tag_version.outputs.new_tag}}
      changelog:  ${{steps.tag_version.outputs.changelog}}
    steps:
    - name: Update version number
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.1
      with:
        github_token: ${{secrets.GITHUB_TOKEN}}
        #custom_tag: 1.3.1

  build_net_framework:
    name: Building .NET Framework assembly
    needs: [version]
    runs-on: windows-latest
    steps:
    - name: Decode SNK
      id: sign_key_file
      uses: timheuer/base64-to-file@v1 
      with:
        fileName: 'Signature.snk'
        encodedString: ${{secrets.SIGN_KEY}}
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Setup .NET Framework
      uses: microsoft/setup-msbuild@v1.1
    - name: Building .NET Framework
      run: MSBuild -nologo -restore "${{github.workspace}}\${{env.SolutionName}}\${{env.SolutionName}}35.csproj" /property:Configuration=Release -property:OutputPath="${{github.workspace}}/bin/" -property:Version=${{needs.version.outputs.new_version}} -property:AssemblyOriginatorKeyFile="${{ steps.sign_key_file.outputs.filePath }}"
    - name: Deploy artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Net20
        path: ${{github.workspace}}/bin/*
        if-no-files-found: error

  build_net:
    name: Building .NET assembly
    needs: [version]
    runs-on: ubuntu-latest
    steps:
    - name: Decode SNK
      id: sign_key_file
      uses: timheuer/base64-to-file@v1
      with:
        fileName: 'Signature.snk'
        encodedString: ${{secrets.SIGN_KEY}}
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore ${{env.SolutionName}}.sln
    - name: Building .NET
      run: dotnet build "${{github.workspace}}\${{env.SolutionName}}\${{env.SolutionName}}.csproj" --configuration Release --no-restore /p:OutputPath="../bin/" /p:DocumentationFile="../bin/${{env.SolutionName}}.xml" /p:SignAssembly=true /p:AssemblyOriginatorKeyFile="${{steps.sign_key_file.outputs.filePath}}" /p:AssemblyVersion=${{needs.version.outputs.new_version}} /p:FileVersion=${{needs.version.outputs.new_version}} /p:InformationalVersion=${{needs.version.outputs.new_version}}
    - name: Deploying artifacts
      uses: actions/upload-artifact@v3
      with:
        name: NetStandard20
        path: ${{github.workspace}}/bin/*
        if-no-files-found: error

  deploy_nuget:
    name: Deploying NuGet package
    needs: [version, build_net_framework, build_net]
    runs-on: windows-latest

    steps:
    - name: Extracting all artifacts
      uses: actions/download-artifact@v3
      with:
        path: bin
    - name: Checkout nessesary files from repo
      uses: actions/checkout@v3
      with:
        sparse-checkout: |
          README.md
          ${{env.SolutionName}}.dll.nuspec
        sparse-checkout-cone-mode: false
    - name: Extracting all artifacts
      uses: actions/download-artifact@v3
      with:
        path: bin
    - name: Packing artifacts
      run: nuget pack ${{env.SolutionName}}.dll.nuspec -Version ${{needs.version.outputs.new_version}} -OutputDirectory nupkg
    - name: Peparing package source
      run: dotnet nuget add source --username DKorablin --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/DKorablin/index.json"
    - name: Deploying package to GitHub
      run: dotnet nuget push nupkg\*.nupkg --api-key ${{ secrets.GITHUB_TOKEN }} --source "github"

  deploy_release:
    name: Deploying artifacts
    needs: [version, build_net_framework, build_net]
    runs-on: ubuntu-latest

    steps:
    - name: Extracting all artifacts
      uses: actions/download-artifact@v3
      with:
        path: bin
    - name: Zipping artifacts
      run: zip -qq -r release.zip bin
      working-directory: ${{github.workspace}}
    - name: Deploying release
      uses: ncipollo/release-action@v1
      with:
        artifacts: ${{github.workspace}}/release.zip
        tag: ${{ needs.version.outputs.new_tag }}
        name: Auto ${{ needs.version.outputs.new_tag }}
        body: ${{ needs.version.outputs.changelog }}
        artifactErrorsFailBuild: true
        generateReleaseNotes: true